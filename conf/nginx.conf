worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    lua_shared_dict dogs 1m;

    init_by_lua_block {
        ngx.shared.dogs:set('num',2)
    }
    server {
        listen 8080;
        location / {
            access_by_lua '
                local resp=ngx.location.capture("/auth")
                if resp.status == ngx.HTTP_OK then
                    return
                end
                ngx.exit(resp.status)
            ';
            proxy_pass http://127.0.0.1:8086/;
        }

        location /auth {
            proxy_pass http://127.0.0.1:8088/;    
        }
    }

    server {
        listen 8086;
        location / {
            default_type text/plain;
            content_by_lua '
                ngx.say("i am EMM response")
                ';
        }
    }

    server {
        listen 8088;
        location / {
            default_type text/plain;
            content_by_lua '
                ngx.shared.dogs:incr("num",1)
                local num=ngx.shared.dogs:get("num")
                ngx.log(ngx.ERR, "num:", num)             
                if num % 2 == 1 then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                else 
                    ngx.exit(ngx.HTTP_OK)
                end
                ';
        }
    }
}

